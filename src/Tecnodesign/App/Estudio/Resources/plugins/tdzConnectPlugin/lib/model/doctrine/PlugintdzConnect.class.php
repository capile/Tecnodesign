<?php

/**
 * PlugintdzConnect
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PlugintdzConnect extends BasetdzConnect
{
  private static $conn=null;
  public static function connect()
  {
    if(is_null(self::$conn)) self::$conn = Doctrine_Manager::getInstance()->getConnection(sfConfig::get('app_connect_connection_name'));
    return self::$conn;
  }
  public static function query()
  {
    return new Doctrine_RawSql(self::connect());
  }

  public static function getConnection($o=array())
  {
    $p=false;
    $q = self::query();
    $q->select('{c.*}')
      ->from('tdz_connect as c')
      ->addComponent('c', 'tdzConnect')
      ->where('c.username=? and c.ns=? and c.expired is null',array($o['username'], $o['ns']))
      ->limit(1);
    $connect= $q->execute();
    //$connect=tdzConnectTable::getInstance()->findByDql('username=? and ns=? and expired is null', array($o['username'], $o['ns']));
    //tdz::debug($connect, $o);
    if($connect && $connect->count()>0)
      $connect=$connect[0];
    else
      $connect=false;
    if(!$connect)
    {
      $p=new tdzPeople();
      $p->name=$o['name'];
      $p->save();
      $connect=new tdzConnect();
      $connect->ns=$o['ns'];
      $connect->username=$o['username'];
      $connect->person=$p->id;
      $connect->hash=$o['hash'];
      $connect->save();
    }
    return $connect;
  }
  public function updateAccess()
  {
    $ua=(isset($_SERVER['HTTP_USER_AGENT']))?($_SERVER['HTTP_USER_AGENT']):('unknown');
    $ua=substr($ua, 0, 250);
    $ip=(isset($_SERVER['REMOTE_ADDR']))?($_SERVER['REMOTE_ADDR']):('::');
    $q = tdzAccess::query();
    $q->select('{a.*}')
      ->from('tdz_access as a inner join tdz_connect as c on c.id=a.connection and c.person=a.person')
      ->addComponent('a', 'tdzAccess')
      ->where('c.id=? and a.client=? and c.hash=?')
      ->orderBy('a.updated desc')
      ->limit(1);
    $a= $q->execute(array($this->id, $ua, $this->hash));
    if($a->count()>0)
    {
      $a=$a[0];
      $mod=strtotime($a->updated);
      if($mod<time()-3600)
        $a=false;
      else
      {
        $a->updated=date('Y-m-d H:i:s');
        $a->save();
      }
    }
    else $a=false;
    if(!$a)
    {
      $a=new tdzAccess();
      $a->person=$this->person;
      $a->connection=$this->id;
      $a->ip=$ip;
      $a->client=$ua;
      $a->save();
    }
    return $a;
  }
  public function preInsert($event)
  {
    $web=(isset($_SERVER['REQUEST_URI']));
    if($web || !strtotime($this->created))
      $this->created = date('Y-m-d H:i:s', time());
    if($web || !strtotime($this->updated))
      $this->updated = date('Y-m-d H:i:s', time());
  }
  public function preUpdate($event)
  {
    $web=(isset($_SERVER['REQUEST_URI']));
    if($web || !strtotime($this->updated))
      $this->updated = date('Y-m-d H:i:s', time());
  }
}