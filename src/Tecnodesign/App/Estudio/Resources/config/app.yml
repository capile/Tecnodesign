# Here the basic configuration of E-Studio is detailed and explained.
# Do not edit this file, update the application app.yml instead.
# @package      tdzEStudioPlugin
# @author       Tecnodesign <ti@tecnodz.com>
# @link         http://tecnodz.com/
# @copyright    Tecnodesign (c) 2010
# @version      SVN: $Id: app.yml 748 2011-05-16 21:22:01Z capile $

# default values
dev:
  studio:
    prefix_url: ~
    install: true
all:
  studio:
    install: false
    symfony-app: studio
    assets_optimize: on
    assets_optimize_actions:
      min: 
        method: minify
        arguments: [ '', true, true, true ]
        extensions: [ css, js ]
        combine: on
      icon:
        method: resize
        extensions: [ '', 'jpg', 'jpeg', 'png', 'gif' ]
        arguments:
          width: 100
          height: 25
          crop: true
        combine: off
      thumb:
        method: resize
        extensions: [ '', 'jpg', 'jpeg', 'png', 'gif' ]
        params:
          width: 80
          height: 70
          crop: true
        combine: off
      200x100:
        method: resize
        extensions: [ '', 'jpg', 'jpeg', 'png', 'gif' ]
        params:
          width: 200
          height: 100
          crop: true
        combine: off
    assets-url: /_
    ui-assets-url: /_/tecnodesign
    ui-url: /e-studio
    poll: 15
    auto_update_files: true
    auto_update_extensions:
      db: false
      php: false
      html: false
      htm: false
      *: true
    auto_update_formats:
      'text/html': false
      *: true
    auto_update_skip: [ '/_/tecnodesign' ]
    entry_types:
      entry:
        label: "*Simple entry"
        display: true
      page:
        label: "*Page"
        display: true
      feed:
        label: "*News channel"
        display: true
      file:
        label: "*File"
        display: false
    upload_dir: data/e-studio/uploads
    time_format: H:i
    date_format: d/m
    past_year_date_format: d/m/Y
    prefix_url: 
    connection_name: studio
    # time to keep contents cached (before rebuilding), set to 0 to disable caching
    cache_timeout: 1800

    # error messages
    error403:
      title: Forbidden
      message: You don't have the appropriate credentials to access this resource.
      link: /login?url=%s
    error404:
      title: Page not found
      message: "Oops, we haven't found this resource in our records. Is this the right address?"

    ui_view: _tdz_cms
    default_layout: layout
    template_dir: plugins/tdzEStudioPlugin/templates
    templates:
      layout: Default template
    helper_dir: plugins/tdzEStudioPlugin/lib/helper
    default_slotname: default
    slots:
      default:
        header: ~
        #  export: Tecnodesign_User::signInWidget()
        body:   ~
        footer: ~
# custom slots, might have specific contents added
#      tecnodesign:
#        header: ~
#        body:
#          0: teste...   # the key might chenge the content position among others
#          2:
#            content: no meio!!!
#          999: no final!!!
#        footer: ~

# Available languages and translations
# These options control the languages available for the CMS interface, as well as the website
    languages:
      #pt_BR: PortuguÃªs do Brasil
      #en_US: English
    default_language: pt_BR

    tinymce_css: /_/tecnodesign/css/tinymce.css
# Permission control
# Here the default permissions are set. Each base role (new|preview|edit|publish|delete)
# can be refined by object type: newEntry, newContent, newContentTypeHtml, newContentTypeFeed
# Unpublished and Published are additional object types to be applied for each role.
# Their presense overrides the raw object type role.
#
# All these options can be further refined by routing or using the tdzPermissions table
#
# Syntax is: [role]: [(array|string) credentials]
# The $user->isSuperAdmin() grants all privileges to the user
#
# This sample uses the following sample credentials: Admin, Developer, Editor, Author, but they may be
# overriden by custom ones using the app.yml config.
    permissions:
      # basic privilege: is overriden by role/object-specific calls
      all: ~

      # who is eligible to view the website. This directive is overriden by the next two directives
      preview: '*'
      # only authorized users may preview unpublished content
      previewUnpublished: [ Administrator, Developer, Editor, Author ]
      # everyone may view published content
      previewPublished: '*'

      new: [ Developer, Editor, Author ]
      # only developers may add the "php" Content type. Note that the most specific
      # credential will be used. The cascading in this case would be:
      # newContentTypePhp > newContent(un)Published > newContent > newEntry(un)Published > newEntry > new(un)Published > new > all
      newContentTypePhp: [ Developer ]
      # Template are content slots without any associated Entry
      newTemplate: [ Developer ]
      # only admins may add new credentials
      newPermission: ~

      edit: [ Administrator, Developer, Editor, Author ]
      # Template are content slots without any associated Entry
      editTemplate: [ Developer ]
      editContentTypePhp: [ Developer ]

      delete: [ Administrator, Developer, Editor ]

      publish: [ Administrator, Editor ]
      # Authors may only publish content (and not the entry)
      # publishContent: [ Administrator, Editor, Author ]

      # only editors may unpublish one entry/content
      # publishEntryPublished: [ Administrator, Editor ]
      # publishContentPublished: [ Administrator, Editor ]

      # CMS UI credentials
      search: [ Administrator, Developer, Editor, Author ]
      
    form_permissions:
      previewPublished: Preview published page
      edit: Update content
      publish: Publish


# With the following option enabled, it will automatically add an automatically generated credential
# named UserCredential[id] where [id] is the $user->getId() (if exists) for each entry added.
#
# This can be used to create a owner-type credentials, eligible for recursion.
# It can also be set to a array mapping of credentials to add (default: all).
# Example:
#
#    auto_permissions: [ editPublished, publish, publishPublished ]
#
# this enables authors to (un)publish their own contents.
#
    auto_permissions: false
    widgets:
      page-title: { label: Page Title, model: tdz, method: getTitle, cache: false }
      tag-cloud: { label: Tag Cloud, model: tdzTags, method: getCloud, cache: false }
      year-nav: { label: Article navigation per year, model: tdzContents, method: getFeedYears, cache: false }
      signin: { label: Sign in, model: tdzUser, method: signIn, cache: false }
# content types eligible for editing
    default_content_type: html
    content_types:
      html:
        title: HTML Content
        fields:
          html: { label: Content, type: html, required: true }
      '':
        title: Plain Text
        fields:
          txt: { label: Content, type: textarea }
      feed:
        title: Article list
        fields:
          entry: { label: Channel, type: choice, model: tdzEntries, method: getFeedChoices, required: true }
          #link_channel: { label: ' ', type: choice, class: checkbox noborder nooverflow, options: { expanded: true, multiple: true }, choices: { 1: Display link to channel } }
          master: { label: Layout, type: choice, model: tdzEntries, method: getMasters }
          limit: { label: Entries to display, type: choice, choices: { "": All, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 10, 25: 25, 100: 100, 1000: 1000 } }
          hpp: { label: Entries per page, type: choice, choices: { "": All, 5: 5, 10: 10, 25: 25, 100: 100 } }
          options: { label: Options, type: choice, class: checkbox nostyle, options: { expanded: true, multiple: true }, choices: { related: Only articles related to the page, linkhome: Display link to channel, preview: Enable preview, filter: Enable filters } }
      media:
        title: Media
        fields:
          src: { label: Media source, type: text, required: true, class: media }
          title: { label: Title, type: text }
          alt: { label: Alternative text, type: text }
          format: { label: Render as, type: choice, choices: { "": Guess format from file, image: Image, video: Embedded video, audio: Embedded audio, flash: Flash presentation, pdf: Embedded PDF, download: Content for download } }
          id: { label: Identifier, type: text }
          href: { label: Link to, type: text }
      php:
        title: PHP Standalone Script
        fields:
          script: { label: PHP Script, type: text }
          pi: { label: Processing instructions, type: textarea }

